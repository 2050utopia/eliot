syntax = "proto3";
package eliot.services.containers.v1;

option go_package = "github.com/ernoaapa/eliot/pkg/api/services/node/v1;node";

// Node service provides access to node itself
service Node {
	rpc Info(InfoRequest) returns (InfoResponse);
}

message InfoRequest {}

message InfoResponse {
	Info info = 1;
}

message Info {
	// Labels for the node
	repeated Label labels = 1;

	// Node hostname
	string hostname = 2;

	// IP addresses
	repeated string addresses = 3;

	// Port
	int64 grpcPort = 4;

	// The machine id is an ID identifying a specific Linux/Unix installation.
	// It does not change if hardware is replaced.
	string machineID = 5;

	// The system uuid is the main board product UUID,
	// as set by the board manufacturer and encoded in the BIOS DMI information
	string systemUUID = 6;

	// A random ID that is regenerated on each boot
	string bootID = 7;

	// Node operating system. One of 386, amd64, arm, s390x, and so on.
	string arch = 8;

	// node operating system. One of darwin, freebsd, linux, windows, and so on
	string os = 9;

	// Server version
	string version = 10;

	// Filesystem infos
	repeated Filesystem filesystems = 11;
}

message Label {
	string key = 1;
	string value = 2;
}

message Filesystem {
	// E.g /dev/vda1, tmpfs, cgroup, etc.
	string filesystem = 1;
	// E.g. ext4, tmpfs, cgroup, etc.
	string typeName = 2;
	// Path to the mounted dir
	string mountDir = 3;
	// Total data blocks
	uint64 total = 4;
	// Free blocks
	uint64 free = 5;
	// Free blocks available to unprivileged user
	uint64 available = 6;
}
