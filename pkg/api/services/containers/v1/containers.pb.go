// Code generated by protoc-gen-go.
// source: services/containers/v1/containers.proto
// DO NOT EDIT!

/*
Package containers is a generated protocol buffer package.

It is generated from these files:
	services/containers/v1/containers.proto

It has these top-level messages:
	StdinStreamRequest
	StdoutStreamResponse
	SignalRequest
	SignalResponse
	Container
	IOSet
	Mount
	ContainerStatus
*/
package containers

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StdinStreamRequest struct {
	Input []byte `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
}

func (m *StdinStreamRequest) Reset()                    { *m = StdinStreamRequest{} }
func (m *StdinStreamRequest) String() string            { return proto.CompactTextString(m) }
func (*StdinStreamRequest) ProtoMessage()               {}
func (*StdinStreamRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StdinStreamRequest) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

type StdoutStreamResponse struct {
	Output []byte `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	// Is this stderr(=true) or stdout(=false)
	Stderr bool `protobuf:"varint,2,opt,name=stderr" json:"stderr,omitempty"`
}

func (m *StdoutStreamResponse) Reset()                    { *m = StdoutStreamResponse{} }
func (m *StdoutStreamResponse) String() string            { return proto.CompactTextString(m) }
func (*StdoutStreamResponse) ProtoMessage()               {}
func (*StdoutStreamResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StdoutStreamResponse) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *StdoutStreamResponse) GetStderr() bool {
	if m != nil {
		return m.Stderr
	}
	return false
}

type SignalRequest struct {
	Namespace   string `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	ContainerID string `protobuf:"bytes,2,opt,name=containerID" json:"containerID,omitempty"`
	Signal      int32  `protobuf:"varint,3,opt,name=signal" json:"signal,omitempty"`
}

func (m *SignalRequest) Reset()                    { *m = SignalRequest{} }
func (m *SignalRequest) String() string            { return proto.CompactTextString(m) }
func (*SignalRequest) ProtoMessage()               {}
func (*SignalRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SignalRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *SignalRequest) GetContainerID() string {
	if m != nil {
		return m.ContainerID
	}
	return ""
}

func (m *SignalRequest) GetSignal() int32 {
	if m != nil {
		return m.Signal
	}
	return 0
}

type SignalResponse struct {
}

func (m *SignalResponse) Reset()                    { *m = SignalResponse{} }
func (m *SignalResponse) String() string            { return proto.CompactTextString(m) }
func (*SignalResponse) ProtoMessage()               {}
func (*SignalResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Container struct {
	Name       string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Image      string   `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	Tty        bool     `protobuf:"varint,3,opt,name=tty" json:"tty,omitempty"`
	WorkingDir string   `protobuf:"bytes,4,opt,name=workingDir" json:"workingDir,omitempty"`
	Args       []string `protobuf:"bytes,5,rep,name=args" json:"args,omitempty"`
	Env        []string `protobuf:"bytes,6,rep,name=env" json:"env,omitempty"`
	Mounts     []*Mount `protobuf:"bytes,7,rep,name=mounts" json:"mounts,omitempty"`
	Io         *IOSet   `protobuf:"bytes,8,opt,name=io" json:"io,omitempty"`
}

func (m *Container) Reset()                    { *m = Container{} }
func (m *Container) String() string            { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()               {}
func (*Container) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Container) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Container) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Container) GetTty() bool {
	if m != nil {
		return m.Tty
	}
	return false
}

func (m *Container) GetWorkingDir() string {
	if m != nil {
		return m.WorkingDir
	}
	return ""
}

func (m *Container) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Container) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Container) GetMounts() []*Mount {
	if m != nil {
		return m.Mounts
	}
	return nil
}

func (m *Container) GetIo() *IOSet {
	if m != nil {
		return m.Io
	}
	return nil
}

type IOSet struct {
	In  string `protobuf:"bytes,1,opt,name=in" json:"in,omitempty"`
	Out string `protobuf:"bytes,2,opt,name=out" json:"out,omitempty"`
	Err string `protobuf:"bytes,3,opt,name=err" json:"err,omitempty"`
}

func (m *IOSet) Reset()                    { *m = IOSet{} }
func (m *IOSet) String() string            { return proto.CompactTextString(m) }
func (*IOSet) ProtoMessage()               {}
func (*IOSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *IOSet) GetIn() string {
	if m != nil {
		return m.In
	}
	return ""
}

func (m *IOSet) GetOut() string {
	if m != nil {
		return m.Out
	}
	return ""
}

func (m *IOSet) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type Mount struct {
	Type        string   `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Source      string   `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	Destination string   `protobuf:"bytes,3,opt,name=destination" json:"destination,omitempty"`
	Options     []string `protobuf:"bytes,4,rep,name=options" json:"options,omitempty"`
}

func (m *Mount) Reset()                    { *m = Mount{} }
func (m *Mount) String() string            { return proto.CompactTextString(m) }
func (*Mount) ProtoMessage()               {}
func (*Mount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Mount) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Mount) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Mount) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *Mount) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

type ContainerStatus struct {
	ContainerID string `protobuf:"bytes,1,opt,name=containerID" json:"containerID,omitempty"`
	Image       string `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	State       string `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
}

func (m *ContainerStatus) Reset()                    { *m = ContainerStatus{} }
func (m *ContainerStatus) String() string            { return proto.CompactTextString(m) }
func (*ContainerStatus) ProtoMessage()               {}
func (*ContainerStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ContainerStatus) GetContainerID() string {
	if m != nil {
		return m.ContainerID
	}
	return ""
}

func (m *ContainerStatus) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ContainerStatus) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func init() {
	proto.RegisterType((*StdinStreamRequest)(nil), "cand.services.containers.v1.StdinStreamRequest")
	proto.RegisterType((*StdoutStreamResponse)(nil), "cand.services.containers.v1.StdoutStreamResponse")
	proto.RegisterType((*SignalRequest)(nil), "cand.services.containers.v1.SignalRequest")
	proto.RegisterType((*SignalResponse)(nil), "cand.services.containers.v1.SignalResponse")
	proto.RegisterType((*Container)(nil), "cand.services.containers.v1.Container")
	proto.RegisterType((*IOSet)(nil), "cand.services.containers.v1.IOSet")
	proto.RegisterType((*Mount)(nil), "cand.services.containers.v1.Mount")
	proto.RegisterType((*ContainerStatus)(nil), "cand.services.containers.v1.ContainerStatus")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Containers service

type ContainersClient interface {
	Attach(ctx context.Context, opts ...grpc.CallOption) (Containers_AttachClient, error)
	Signal(ctx context.Context, in *SignalRequest, opts ...grpc.CallOption) (*SignalResponse, error)
}

type containersClient struct {
	cc *grpc.ClientConn
}

func NewContainersClient(cc *grpc.ClientConn) ContainersClient {
	return &containersClient{cc}
}

func (c *containersClient) Attach(ctx context.Context, opts ...grpc.CallOption) (Containers_AttachClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Containers_serviceDesc.Streams[0], c.cc, "/cand.services.containers.v1.Containers/Attach", opts...)
	if err != nil {
		return nil, err
	}
	x := &containersAttachClient{stream}
	return x, nil
}

type Containers_AttachClient interface {
	Send(*StdinStreamRequest) error
	Recv() (*StdoutStreamResponse, error)
	grpc.ClientStream
}

type containersAttachClient struct {
	grpc.ClientStream
}

func (x *containersAttachClient) Send(m *StdinStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *containersAttachClient) Recv() (*StdoutStreamResponse, error) {
	m := new(StdoutStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *containersClient) Signal(ctx context.Context, in *SignalRequest, opts ...grpc.CallOption) (*SignalResponse, error) {
	out := new(SignalResponse)
	err := grpc.Invoke(ctx, "/cand.services.containers.v1.Containers/Signal", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Containers service

type ContainersServer interface {
	Attach(Containers_AttachServer) error
	Signal(context.Context, *SignalRequest) (*SignalResponse, error)
}

func RegisterContainersServer(s *grpc.Server, srv ContainersServer) {
	s.RegisterService(&_Containers_serviceDesc, srv)
}

func _Containers_Attach_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ContainersServer).Attach(&containersAttachServer{stream})
}

type Containers_AttachServer interface {
	Send(*StdoutStreamResponse) error
	Recv() (*StdinStreamRequest, error)
	grpc.ServerStream
}

type containersAttachServer struct {
	grpc.ServerStream
}

func (x *containersAttachServer) Send(m *StdoutStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *containersAttachServer) Recv() (*StdinStreamRequest, error) {
	m := new(StdinStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Containers_Signal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainersServer).Signal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cand.services.containers.v1.Containers/Signal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainersServer).Signal(ctx, req.(*SignalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Containers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cand.services.containers.v1.Containers",
	HandlerType: (*ContainersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Signal",
			Handler:    _Containers_Signal_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Attach",
			Handler:       _Containers_Attach_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "services/containers/v1/containers.proto",
}

func init() { proto.RegisterFile("services/containers/v1/containers.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 523 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x51, 0x6b, 0xdb, 0x30,
	0x10, 0xc6, 0x49, 0xec, 0x26, 0xd7, 0xad, 0x2b, 0x22, 0x0c, 0xd3, 0x8d, 0x61, 0xfc, 0xb2, 0xd0,
	0x81, 0xbd, 0x64, 0x6f, 0xeb, 0x53, 0xd7, 0x32, 0xe8, 0xc3, 0x18, 0xd8, 0x6f, 0x7b, 0x19, 0xaa,
	0x23, 0x5c, 0xd1, 0x59, 0xd2, 0xa4, 0x73, 0x46, 0x7f, 0xee, 0x7e, 0xc8, 0x60, 0x48, 0x96, 0x13,
	0xb3, 0x94, 0x74, 0x6f, 0xf7, 0x9d, 0x4f, 0xdf, 0xf7, 0xdd, 0x9d, 0x64, 0x78, 0x6b, 0x98, 0xde,
	0xf0, 0x8a, 0x99, 0xbc, 0x92, 0x02, 0x29, 0x17, 0x4c, 0x9b, 0x7c, 0xb3, 0x1c, 0xa0, 0x4c, 0x69,
	0x89, 0x92, 0xbc, 0xaa, 0xa8, 0x58, 0x67, 0x7d, 0x75, 0x36, 0xf8, 0xbe, 0x59, 0xa6, 0xe7, 0x40,
	0x4a, 0x5c, 0x73, 0x51, 0xa2, 0x66, 0xb4, 0x29, 0xd8, 0xcf, 0x96, 0x19, 0x24, 0x73, 0x08, 0xb9,
	0x50, 0x2d, 0xc6, 0x41, 0x12, 0x2c, 0x9e, 0x15, 0x1d, 0x48, 0x3f, 0xc3, 0xbc, 0xc4, 0xb5, 0x6c,
	0xb1, 0x2f, 0x36, 0x4a, 0x0a, 0xc3, 0xc8, 0x4b, 0x88, 0x64, 0x8b, 0xbb, 0x72, 0x8f, 0x6c, 0xde,
	0xe0, 0x9a, 0x69, 0x1d, 0x8f, 0x92, 0x60, 0x31, 0x2d, 0x3c, 0x4a, 0x6b, 0x78, 0x5e, 0xf2, 0x5a,
	0xd0, 0x1f, 0xbd, 0xdc, 0x6b, 0x98, 0x09, 0xda, 0x30, 0xa3, 0x68, 0xc5, 0x1c, 0xc7, 0xac, 0xd8,
	0x25, 0x48, 0x02, 0xc7, 0x5b, 0xcf, 0x37, 0xd7, 0x8e, 0x6b, 0x56, 0x0c, 0x53, 0x4e, 0xc8, 0x11,
	0xc6, 0xe3, 0x24, 0x58, 0x84, 0x85, 0x47, 0xe9, 0x29, 0x9c, 0xf4, 0x42, 0x9d, 0xd5, 0xf4, 0x4f,
	0x00, 0xb3, 0xab, 0xfe, 0x24, 0x21, 0x30, 0xb1, 0x32, 0x5e, 0xd2, 0xc5, 0xae, 0xf5, 0x86, 0xd6,
	0xcc, 0xeb, 0x74, 0x80, 0x9c, 0xc2, 0x18, 0xf1, 0xc1, 0xd1, 0x4f, 0x0b, 0x1b, 0x92, 0x37, 0x00,
	0xbf, 0xa4, 0xbe, 0xe7, 0xa2, 0xbe, 0xe6, 0x3a, 0x9e, 0xb8, 0xe2, 0x41, 0xc6, 0x72, 0x53, 0x5d,
	0x9b, 0x38, 0x4c, 0xc6, 0x96, 0xdb, 0xc6, 0x96, 0x85, 0x89, 0x4d, 0x1c, 0xb9, 0x94, 0x0d, 0xc9,
	0x47, 0x88, 0x1a, 0xd9, 0x0a, 0x34, 0xf1, 0x51, 0x32, 0x5e, 0x1c, 0xaf, 0xd2, 0xec, 0xc0, 0xb2,
	0xb2, 0x2f, 0xb6, 0xb4, 0xf0, 0x27, 0xc8, 0x0a, 0x46, 0x5c, 0xc6, 0xd3, 0x24, 0x78, 0xf2, 0xdc,
	0xcd, 0xd7, 0x92, 0x61, 0x31, 0xe2, 0x32, 0xbd, 0x80, 0xd0, 0x01, 0x72, 0x02, 0x23, 0x2e, 0x7c,
	0xe3, 0x23, 0x2e, 0xac, 0x35, 0xd9, 0xa2, 0x6f, 0xda, 0x86, 0xce, 0xac, 0xd6, 0xae, 0x65, 0x6b,
	0x56, 0xeb, 0x54, 0x42, 0xe8, 0x1c, 0xd8, 0xde, 0xf0, 0x41, 0x6d, 0xe7, 0x66, 0x63, 0xb7, 0x03,
	0xd9, 0xea, 0xaa, 0x1f, 0x9c, 0x47, 0x76, 0x7b, 0x6b, 0x66, 0x90, 0x0b, 0x8a, 0x5c, 0x0a, 0x4f,
	0x37, 0x4c, 0x91, 0x18, 0x8e, 0xa4, 0xb2, 0x91, 0x89, 0x27, 0x6e, 0x32, 0x3d, 0x4c, 0xbf, 0xc3,
	0x8b, 0xed, 0xb2, 0x4a, 0xa4, 0xd8, 0x9a, 0x7f, 0x2f, 0x43, 0xb0, 0x7f, 0x19, 0x1e, 0x5f, 0xe0,
	0x1c, 0x42, 0x83, 0x14, 0x99, 0x37, 0xd0, 0x81, 0xd5, 0xef, 0x00, 0x60, 0xab, 0x60, 0x88, 0x82,
	0xe8, 0x12, 0x91, 0x56, 0x77, 0x24, 0x3f, 0x38, 0xcf, 0xfd, 0x17, 0x73, 0xb6, 0x7c, 0xea, 0xc0,
	0xde, 0xb3, 0x59, 0x04, 0xef, 0x03, 0x42, 0x21, 0xea, 0x6e, 0x28, 0x39, 0x3f, 0x4c, 0x30, 0x7c,
	0x2f, 0x67, 0xef, 0xfe, 0xab, 0xb6, 0x93, 0xf9, 0x74, 0xf5, 0xed, 0xb2, 0xe6, 0x78, 0xd7, 0xde,
	0x66, 0x95, 0x6c, 0x72, 0xa6, 0x85, 0xa4, 0x54, 0xd1, 0xbc, 0xa2, 0x22, 0x57, 0xf7, 0x75, 0x4e,
	0x15, 0xcf, 0x1f, 0xff, 0x93, 0x5c, 0xec, 0xd0, 0x6d, 0xe4, 0x7e, 0x25, 0x1f, 0xfe, 0x06, 0x00,
	0x00, 0xff, 0xff, 0x0b, 0x52, 0xb0, 0xbf, 0x75, 0x04, 0x00, 0x00,
}
