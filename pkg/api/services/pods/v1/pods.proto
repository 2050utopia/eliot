syntax = "proto3";
package elliot.services.pods.v1;
import "core/metadata.proto";
import "services/containers/v1/containers.proto";

option go_package = "github.com/ernoaapa/elliot/pkg/api/services/pods/v1;pods";

// Pods service provides visibility to the pods.
service Pods {
	rpc Create(CreatePodRequest) returns (stream CreatePodStreamResponse);
	rpc Start(StartPodRequest) returns (StartPodResponse);
	rpc Delete(DeletePodRequest) returns (DeletePodResponse);
	rpc List(ListPodsRequest) returns (ListPodsResponse);
}

message CreatePodRequest {
	Pod pod = 1;
	bool tty = 2;
}

message CreatePodStreamResponse {
	repeated ImageFetch images = 1;
}

message ImageFetch {
	string containerID = 1;
	string image = 2;
	bool resolved = 3;
	bool failed = 4;
	repeated ImageLayerStatus layers = 5;
}

message ImageLayerStatus {
	string ref = 1;
	string digest = 2;
	string status = 3;
	int64 offset = 4;
	int64 total = 5;
}

message StartPodRequest {
	string namespace = 1;
	string name = 2;
}

message StartPodResponse {
	Pod pod = 1;
}

message DeletePodRequest {
	string namespace = 1;
	string name = 2;
}

message DeletePodResponse {
	Pod pod = 1;
}

message ListPodsRequest {
	string namespace = 1;
}

message ListPodsResponse {
	repeated Pod pods = 1;
}

message Pod {
	elliot.core.ResourceMetadata metadata = 1;
	PodSpec spec = 2;
	PodStatus status = 3;
}

message PodSpec {
	repeated elliot.services.containers.v1.Container containers = 1;
	bool hostNetwork = 2;
	bool hostPID = 3;
	string restartPolicy = 4;
}

message PodStatus {
	repeated elliot.services.containers.v1.ContainerStatus containerStatuses = 1;
	string hostname = 2;
}
