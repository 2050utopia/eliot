syntax = "proto3";
package cand.services.pods.v1;

option go_package = "pkg/api/services/pods/v1;pods";

// Pods service provides visibility to the pods.
service Pods {
	rpc Create(CreatePodRequest) returns (CreatePodResponse);
	rpc List(ListPodsRequest) returns (ListPodsResponse);
	rpc Attach(AttachRequest) returns (stream StdOutputStreamResponse);
}

message CreatePodRequest {
	Pod pod = 1;
}

message CreatePodResponse {
	Pod pod = 1;
}

message ListPodsRequest {
	string namespace = 1;
}

message ListPodsResponse {
	repeated Pod pods = 1;
}

message AttachRequest {
	string namespace = 1;
	string containerID = 2;
}

message StdOutputStreamResponse {
	bytes line = 1;
	// Is this stderr(=true) or stdout(=false)
	bool stderr = 2;
}

message Pod {
	ResourceMetadata metadata = 1;
	PodSpec spec = 2;
	PodStatus status = 3;
}

message PodSpec {
	repeated Container containers = 1;
}

message Container {
	string name = 1;
	string image = 2;
}

message PodStatus {
	repeated ContainerStatus containerStatuses = 1;
}

message ContainerStatus {
	string containerID = 1;
	string image = 2;
	string state = 3;
}

// ResourceMetadata is metadata that all resources must have
message ResourceMetadata {
	// Name must be unique within a namespace.
	// Cannot be updated.
	string name = 1;

	// Namespace defines space within each name must be unique.
	// An empty namespace is equivalent to the default namespace.
	// Cannot be updated.
	string namespace = 2;
}